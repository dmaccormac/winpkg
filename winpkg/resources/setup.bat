@echo off
goto :init

:header
    echo %__NAME% v%__VERSION%
    echo This is a sample batch file setup template.
    goto :eof

:usage
    echo USAGE:
    echo   %__BAT_NAME% [options] 
    echo.
    echo.  /?, --help           shows this help
    echo.  /v, --version        shows the version
    echo.  /e, --verbose        shows detailed output
    echo.  /u, --uninstall      runs uninstaller 
    goto :eof

:version
    if "%~1"=="full" call :header & goto :eof
    echo %__VERSION%
    goto :eof

:missing_argument
    call :header
    call :usage
    echo.
    echo ****                                   ****
    echo ****    MISSING "REQUIRED ARGUMENT"    ****
    echo ****                                   ****
    echo.
    goto :eof

:init
    setlocal enableextensions enabledelayedexpansion
    set "__NAME=%~n0"
    set "__VERSION=1.3.4"
    set "__YEAR=2025"

    set "__BAT_FILE=%~0"
    set "__BAT_PATH=%~dp0"
    set "__BAT_NAME=%~nx0"

    set "OptHelp="
    set "OptVersion="
    set "OptVerbose="

    set "UnNamedArgument="
    set "UnNamedOptionalArg="
    set "NamedFlag="

    @REM CONFIG VARS
    for %%F in ("%__BAT_PATH:~0,-1%") do set "APP=%%~nxF"
    set SRC=%__BAT_PATH%
    set DST=%ProgramW6432%\%app%
    set REG="HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\%app%"
    set PTH="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment"

:parse
    if "%~1"=="" goto :validate

    if /i "%~1"=="/?"                   call :header & call :usage "%~2" & goto :end
    if /i "%~1"=="-?"                   call :header & call :usage "%~2" & goto :end
    if /i "%~1"=="--help"               call :header & call :usage "%~2" & goto :end

    if /i "%~1"=="/v"                   call :version      & goto :end
    if /i "%~1"=="-v"                   call :version      & goto :end
    if /i "%~1"=="--version"            call :version full & goto :end

    if /i "%~1"=="/e"                   set "OptVerbose=yes"  & shift & goto :parse
    if /i "%~1"=="-e"                   set "OptVerbose=yes"  & shift & goto :parse
    if /i "%~1"=="--verbose"            set "OptVerbose=yes"  & shift & goto :parse

    if /i "%~1"=="-f"                   set "NamedFlag=%~2"   & shift & shift & goto :parse
    if /i "%~1"=="--flag"               set "NamedFlag=%~2"   & shift & shift & goto :parse

    if /i "%~1"=="/u"                   set "Uninstall=1"   & shift & shift & goto :parse
    if /i "%~1"=="-u"                   set "Uninstall=1"   & shift & shift & goto :parse
    if /i "%~1"=="--uninstall"          set "Uninstall=1"   & shift & shift & goto :parse

    if not defined UnNamedArgument      set "UnNamedArgument=%~1"     & shift & goto :parse
    if not defined UnNamedOptionalArg   set "UnNamedOptionalArg=%~1"  & shift & goto :parse

    shift
    goto :parse

:validate
    @REM if not defined UnNamedArgument call :missing_argument & goto :end

:main
    if defined OptVerbose (
        echo **** DEBUG IS ON
    )

    if defined Uninstall (
        goto :uninstall
    )

:install
    echo Installer auto-generated by winpkg

    @REM COPY FILES
    echo Copying files from %SRC% to %DST%
    xcopy "%SRC%" "%DST%" /E /I /H

    @REM SET PATH
    echo Setting PATH...
    for /f "skip=2 tokens=3*" %%a in ('reg query %PTH% /v PATH') do (set p=%%~a %%~b)
    setx PATH "%p%;%DST%" /M
    
    @REM SET UNINSTALLER
    echo Setting uninstaller...
    reg add %REG% /v DisplayName /t REG_SZ /d "%APP%" /f
    reg add %REG% /v UninstallString /t REG_SZ /d "\"%DST%\setup.bat\" -u" /f 

    @REM SHOW MESSAGE
    echo Done.
    goto :end

:uninstall
    echo Uninstaller auto-generated by winpkg

    @REM REMOVE PATH
    @for /f "skip=2 tokens=3*" %%a in ('reg query %PTH% /v PATH') do (set p=%%~a %%~b)
    call setx PATH "%%p:;%DST%=%%" /M

    @REM REMOVE UNINSTALLER
    reg delete %REG% /f

    @REM REMOVE FILES
    call rmdir /s /q "%DST%"

    @REM SHOW MESSAGE
    echo Done.
    goto :end

:end
    call :cleanup
    timeout 30
    exit /B

:cleanup
    @REM  The cleanup function is only really necessary if you are _not_ using SETLOCAL.
    set "__NAME="
    set "__VERSION="
    set "__YEAR="

    set "__BAT_FILE="
    set "__BAT_PATH="
    set "__BAT_NAME="

    set "OptHelp="
    set "OptVersion="
    set "OptVerbose="

    set "UnNamedArgument="
    set "UnNamedArgument2="
    set "NamedFlag="

    @endlocal
    goto :eof